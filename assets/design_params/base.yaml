
# design parameters

# May specify sampling range per parameter for automatic 
# design sampling
# Final designs might not use all the parameters specified
# TODO Connecting some parameters?
design: 
  meta: 
    upper: 
      v: Shirt
      range: [FittedShirt, Shirt]    # For curves debug CurvyProjection, for sleeves ExperimentalSleeve
      type: select_null
    wb: 
      v: False
      range: [True, False]
      type: bool
    bottom: 
      v: null
      range: [SkirtCircle, GodetSkirt, Pants, Skirt2, SkirtManyPanels, PencilSkirt]
      type: select_null

  waistband:
    waist: 
      v: 1. 
      range: [1., 2]   # 1 == waist length
      type: float
    width: 
      v: 3
      range: [3, 15]
      type: float

  bodice: 
    ease:
      v: 0
      range: [0, 3]
      type: float

  shirt: 
    ease:
      v: 0
      range: [0, 3]
      type: float
    length: 
      v: 1.
      range: [0.5, 10]   # 1 == waistline
      type: float
    width:   # Around the body 
      v: 1.
      range: [1., 2]    # 1 == bust size
      type: float
    flare:   
      v: 4
      range: [-20, 20]
      type: int

  collar:
    f_collar: 
      v: CurvyNeckHalf
      range: [CircleNeckHalf, CurvyNeckHalf, VNeckHalf, SquareNeckHalf, TrapezoidNeckHalf, CircleArcNeckHalf]
      type: select_null
    b_collar: 
      v: CircleNeckHalf
      range: [CircleNeckHalf, CurvyNeckHalf, VNeckHalf, SquareNeckHalf, TrapezoidNeckHalf, CircleArcNeckHalf]
      type: select_null
    fc_depth:   # Front collar depth
      v: 18
      range: [3, 25]
      type: int
    bc_depth:   # back collar depth
      v: 4
      range: [3, 25]
      type: int
    fc_angle:    # Used in Trapesoid and CircleArc collars (differently)
      v: 90
      range: [30, 180]
      type: int
    bc_angle: 
      v: 90
      range: [30, 180]
      type: int
    width: 
      v: 18  # 18
      range: [18, 30]   # TODO min is a neck width
      type: int
    
  sleeve:
    sleeveless: 
      v: False
      range: [True, False]
      type: bool
    length: 
      v: 30
      range: [3, 80]
      type: int
    connecting_width:
      v: 20
      range: [20, 40]   # TODO min armscye_depth . And no more then that for Bodice
      type: int
    end_width:
      v: 25
      range: [20, 40]  
      type: int
    # Armhole
    armhole_shape: 
      v: ArmholeSquare
      range: [ArmholeSquare, ArmholeSmooth]
      type: select_null
    smoothing_coeff:
      v: 0.25
      range: [0.1, 0.4]
      type: float
    inclanation:   # How much intro the shoulder the sleeve will cut
      v: 3
      range: [2, 6]
      type: float
    
    # Shoulder shape
    standing_shoulder: 
      v: False
      range: [True, False]
      type: bool
    standing_shoulder_len:   # can create "Standing" shoulder
      v: 7
      range: [4, 10]
      type: float

    # Ruffle
    connect_ruffle:
      v: 1
      range: [1, 2]
      type: float
    end_ruffle: 
      v: 1
      range: [1, 2]
      type: float
    # Cuff
    cuff: 
      type:
        v: CuffBandSkirt
        range: [CuffBand, CuffSkirt, CuffBandSkirt]
        type: select_null
      # b_width:  # NOTE taken from end_width # TODO naming convention with waistband
      #  v: 40
      #  range: [30, 40]  
      #  type: int
      b_depth: 
        v: 3
        range: [3, 20]
        type: int
      skirt_length: 
        v: 10
        range: [5, 20]
        type: int
      skirt_flare:
        v: 1.5
        range: [1, 2]
        type: float
      skirt_ruffle: 
        v: 1.3
        range: [1, 1.5]
        type: float

  left:   # If this section is not defined, the garment will be symmetric by default
    enable_asym: 
      v: False    # True == create asymmetric top
      range: [True, False]
      type: bool
    bodice: 
      ease:
        v: 0
        range: [0, 3]
        type: float
    shirt: 
      ease:
        v: 0
        range: [0, 3]
        type: float
      length: 
        v: 1.
        range: [0.5, 10]   # 1 == waistline
        type: float
      width:   # Around the body 
        v: 1.
        range: [1., 2]    # 1 == bust size
        type: float
      flare:   
        v: 4
        range: [-20, 20]
        type: int

    collar:
      f_collar: 
        v: CircleArcNeckHalf
        range: [CircleNeckHalf, CurvyNeckHalf, VNeckHalf, SquareNeckHalf, TrapezoidNeckHalf, CircleArcNeckHalf]
        type: select_null
      b_collar: 
        v: CircleNeckHalf
        range: [CircleNeckHalf, CurvyNeckHalf, VNeckHalf, SquareNeckHalf, TrapezoidNeckHalf, CircleArcNeckHalf]
        type: select_null
      fc_depth:   # Front collar depth
        v: 18
        range: [3, 25]
        type: int
      bc_depth:   # back collar depth
        v: 4
        range: [3, 25]
        type: int
      fc_angle:    # Used in Trapesoid and CircleArc collars (differently)
        v: 90
        range: [30, 180]
        type: int
      bc_angle: 
        v: 90
        range: [30, 180]
        type: int
      width: 
        v: 18  # 18
        range: [18, 30]   # TODO min is a neck width
        type: int
      
    sleeve:
      sleeveless: 
        v: False
        range: [True, False]
        type: bool
      length: 
        v: 30
        range: [3, 100]
        type: int
      connecting_width:
        v: 20
        range: [20, 40]   # TODO min armscye_depth . And no more then that for Bodice
        type: int
      end_width:
        v: 20
        range: [20, 40]  
        type: int

      # Armhole
      armhole_shape: 
        v: ArmholeSmooth
        range: [ArmholeSquare, ArmholeSmooth]
        type: select_null
      smoothing_coeff:
        v: 0.25
        range: [0.1, 0.4]
        type: float
      inclanation:   # How much intro the shoulder the sleeve will cut
        v: 3
        range: [2, 6]
        type: float
      
      # Shoulder shape
      standing_shoulder: 
        v: False
        range: [True, False]
        type: bool
      standing_shoulder_len:   # can create "Standing" shoulder
        v: 7
        range: [4, 10]
        type: float

      # Ruffle
      connect_ruffle:
        v: 1
        range: [1, 2]
        type: float
      end_ruffle: 
        v: 1
        range: [1, 2]
        type: float
      
      # Cuff
      cuff: 
        type:
          v: CuffBandSkirt
          range: [CuffBand, CuffSkirt, CuffBandSkirt]
          type: select_null
        # b_width:  # NOTE taken from end_width # TODO naming convention with waistband
        #  v: 40
        #  range: [30, 40]  
        #  type: int
        b_depth: 
          v: 3
          range: [3, 20]
          type: int
        skirt_length: 
          v: 10
          range: [5, 20]
          type: int
        skirt_flare:
          v: 1.5
          range: [1, 2]
          type: float  
        skirt_ruffle: 
          v: 1.3
          range: [1, 1.5]
          type: float
    
  skirt: 
    length:
      v: 30
      range: [30, 120]
      type: int
    ruffle: 
      v: 1.5
      range: [1, 2]
      type: float 
    bottom_cut: 
      v: 0
      range: [0, 20]  # TODO Untill length
      type: int
    flare: 
      v: 20
      range: [0, 20]
      type: int

  flare-skirt:
    length:
      v: 0.2
      range: [0.1, 1]
      type: float 
    n_panels:
      v: 8
      range: [4, 15]
      type: int 
    suns:     # one "sun" is 360 skirt
      v: 0.7
      range: [0.5, 1.95]
      type: float 

  godet-skirt: 
    base: 
      v: PencilSkirt
      range: [Skirt2, PencilSkirt, SkirtWB]
      type: select
    insert_w: 
      v: 30
      range: [10, 50]  # TODO ranges don't work that well..
      type: int
    insert_depth:   # Cannot be longer then length
      v: 40
      range: [10, 50]  # TODO DEpends on the skirt length though
      type: int
    num_inserts:  # total
      v: 4     # NOTE for pencil skirt base this should be divisible by 4
      range: [4, 8, 12]   # selective options.
      type: select
    cuts_distance:
      v: 5
      range: [0, 10]  # TODO this param needs to depend on the num_inserts and skirt width
      type: int

  pencil-skirt: 
    length:   # From hips
      v: 80
      range: [10, 80]   # TODO related with height and body proportions? 
      type: int
    rise:
      v: 1
      range: [0.5, 1]
      type: float
    flare:   # coefficient may depend on length
      v: 0.6
      range: [0.3, 1]   
      type: float
    front_cut: 
      v: 0
      range: [0, 20]   # TODO Max = length
      type: int
    back_cut: 
      v: 0
      range: [0, 20]   # TODO Max = length
      type: int
    ruffle:
      v: [False, False]   # TODO Can be True only if connected to a waist band
      range: [True, False]
      type: bool

  pants: 
    length: 
      v: 0.5
      range: [0.2, 1]   # 0 == hip line, 1 == floor length
      type: float
    width: 
      v: 1.
      range: [1., 1.5]   # 1 = fits the hips
      type: float
    rise:
      v: 1
      range: [0.5, 1]
      type: float
    ruffle_front:
      v: False   # TODO Can be True only if connected to a waist band
      range: [True, False]
      type: bool
    ruffle_back:
      v: False   # TODO Can be True only if connected to a waist band
      range: [True, False]
      type: bool
    crotch_extention:
      v: 4   # TODO depends on measurements?
      range: [3, 7]
      type: float
    cuff: 
      type:
        v: CuffBandSkirt
        range: [CuffBand, CuffSkirt, CuffBandSkirt]
        type: select_null
      b_width:   # TODO naming convention with waistband
        v: 40
        range: [30, 40]   # TODO related with body measurements
        type: int
      b_depth: 
        v: 10
        range: [3, 20]
        type: int
      skirt_length: 
        v: 10
        range: [5, 20]
        type: int
      skirt_flare:
        v: 1.5
        range: [1, 2]
        type: float
      skirt_ruffle: 
        v: 1.3
        range: [1, 1.5]
        type: float