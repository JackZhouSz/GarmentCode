
# design parameters

# May specify sampling range per parameter for automatic 
# design sampling
# Final designs might not use all the parameters specified
# TODO Rename Ruffle to Gather
design: 
  meta: 
    upper: 
      v: FittedShirt
      range: [FittedShirt, Shirt]    # For curves debug CurvyProjection, for sleeves ExperimentalSleeve
      type: select_null
    wb: 
      v: null
      range: [StraightWB, FittedWB]    # For curves debug CurvyProjection, for sleeves ExperimentalSleeve
      type: select_null
    bottom: 
      v: null  
      range: 
        - SkirtCircle
        - GodetSkirt
        - Pants
        - Skirt2
        - SkirtManyPanels
        - PencilSkirt
        - SkirtLevels
        - MinimalALine   # For testing only
      type: select_null

  waistband:
    waist: 
      v: 1. 
      range: [1., 2]   # 1 == waist length
      type: float
    width: 
      v: 0.1
      range: [0.1, 1]
      type: float

  shirt: 
    strapless:    # Both for fitted and non-fitted shirts
      v: False
      range: [True, False]
      type: bool
    length: 
      v: 2.
      range: [0.5, 4.5]   # 1 == waistline
      type: float
    width:   # Around the body 
      v: 1.
      range: [1., 2]    # 1 == bust size
      type: float

  collar:
    f_collar: 
      v: CircleNeckHalf
      range: [CircleNeckHalf, CurvyNeckHalf, VNeckHalf, SquareNeckHalf, TrapezoidNeckHalf, CircleArcNeckHalf, Bezier2NeckHalf]
      type: select_null
    b_collar: 
      v: CircleNeckHalf
      range: [CircleNeckHalf, CurvyNeckHalf, VNeckHalf, SquareNeckHalf, TrapezoidNeckHalf, CircleArcNeckHalf, Bezier2NeckHalf]
      type: select_null
    width: 
      v: 0.5
      range: [-0.5, 1]   # 0 = a neck width, 1 = max possible width
      type: float
    fc_depth:   # Front collar depth
      v: 0.2
      range: [0, 1]   # 0 = min possible, 1 = bust line
      type: float
    bc_depth:   # back collar depth
      v: 0
      range: [0, 1]   # 0 = min possible, 1 = bust line
      type: float
    fc_angle:    # Used in Trapesoid and CircleArc collars (differently)
      v: 90
      range: [30, 180]
      type: int
    bc_angle: 
      v: 90
      range: [30, 180]
      type: int
    f_bezier_x: 
      v: 0.5
      range:
      - 0.05
      - 0.95
      type: float
    f_bezier_y: 
      v: 0.3
      range:
      - 0.05
      - 0.95
      type: float
    b_bezier_x: 
      v: 0.5
      range:
      - 0.05
      - 0.95
      type: float
    b_bezier_y: 
      v: 0.3
      range:
      - 0.05
      - 0.95
      type: float
    f_flip_curve:
      v: False
      range: [True, False]
      type: bool
    b_flip_curve:
      v: False
      range: [True, False]
      type: bool
    component:
      style: 
        v: null
        range: [Turtle, SimpleLapel]
        type: select_null
      depth: 
        v: 7
        range: [2, 8]
        type: int
      lapel_standing:
        v: False
        range: [True, False]
        type: bool
     
  sleeve:
    sleeveless: 
      v: False
      range: [True, False]
      type: bool
    armhole_shape: 
      v: ArmholeCurve
      range: [ArmholeSquare, ArmholeAngle, ArmholeCurve]
      type: select
    length: 
      v: 30
      range: [3, 80]
      type: int
    connecting_width:
      v: 0.50 
      range: [0, 1]   # 0 = armscue_depth, 1 = as big as the shirt side
      type: float
    end_width:
      v: 0.55
      range: [0.2, 2]   # 1 = same as arm opening
      type: float

    sleeve_angle:  # the rest angle of a sleeve, created at connected point
      v: 60  # deg   
      range: [10, 50]
      type: int
    opening_dir_mix:   # Detailed control over shape of sleeve opening 
      v: 0  # deg   
      range: [-0.9, 1.4]
      type: float
    
    # Shoulder shape
    standing_shoulder: 
      v: False
      range: [True, False]
      type: bool
    standing_shoulder_len:   # can create "Standing" shoulder
      v: 7
      range: [4, 10]
      type: float

    # Ruffle
    connect_ruffle:
      v: 1.7
      range: [1, 2]
      type: float
    
    # Armhole
    smoothing_coeff:
      v: 0.25
      range: [0.1, 0.4]
      type: float
    inclination:   # How much intro the shoulder the sleeve will cut
      v: 3
      range: [2, 6]
      type: float

    # Cuff
    cuff: 
      type:
        v: null
        range: [CuffBand, CuffSkirt, CuffBandSkirt]
        type: select_null
      top_ruffle: 
        v: 1
        range: [1, 3]
        type: float
      b_depth: 
        v: 3
        range: [1, 20]
        type: int
      skirt_length: 
        v: 10
        range: [5, 50]
        type: int
      skirt_flare:
        v: 1.5
        range: [1, 2]
        type: float
      skirt_ruffle: 
        v: 1.3
        range: [1, 1.5]
        type: float

  left:   # If this section is not defined, the garment will be symmetric by default
    enable_asym: 
      v: False    # True == create asymmetric top
      range: [True, False]
      type: bool
    shirt: 
      strapless: 
        v: False
        range: [True, False]
        type: bool
      length: 
        v: 1.
        range: [0.5, 4.5]   # 1 == waistline
        type: float
      width:   # Around the body 
        v: 1.
        range: [1., 2]    # 1 == bust size
        type: float

    collar:
      f_collar: 
        v: VNeckHalf
        range: [CircleNeckHalf, CurvyNeckHalf, VNeckHalf, SquareNeckHalf, TrapezoidNeckHalf, CircleArcNeckHalf, Bezier2NeckHalf]
        type: select_null
      b_collar: 
        v: VNeckHalf
        range: [CircleNeckHalf, CurvyNeckHalf, VNeckHalf, SquareNeckHalf, TrapezoidNeckHalf, CircleArcNeckHalf, Bezier2NeckHalf]
        type: select_null
      width: 
        v: 0.5
        range: [0, 1]   # 0 = a neck width, 1 = max possible width
        type: float
      fc_depth:   # Front collar depth
        v: 0.2
        range: [0, 1]   # 0 = min possible, 1 = bust line
        type: float
      bc_depth:   # back collar depth
        v: 0
        range: [0, 1]   # 0 = min possible, 1 = bust line
        type: float
      f_bezier_x: 
        v: 0.5
        range:
        - 0.05
        - 0.95
        type: float
      f_bezier_y: 
        v: 0.3
        range:
        - 0.05
        - 0.95
        type: float
      b_bezier_x: 
        v: 0.5
        range:
        - 0.05
        - 0.95
        type: float
      b_bezier_y: 
        v: 0.3
        range:
        - 0.05
        - 0.95
        type: float
      fc_angle:    # Used in Trapesoid and CircleArc collars (differently)
        v: 90
        range: [30, 180]
        type: int
      bc_angle: 
        v: 90
        range: [30, 180]
        type: int
      f_flip_curve:
        v: False
        range: [True, False]
        type: bool
      b_flip_curve:
        v: False
        range: [True, False]
        type: bool
      component:
        style: 
          v: null
          range: [Turtle, SimpleLapel]
          type: select_null
        depth: 
          v: 7
          range: [2, 8]
          type: int
        lapel_standing:
          v: False
          range: [True, False]
          type: bool
      
    sleeve:
      sleeveless: 
        v: False
        range: [True, False]
        type: bool
      armhole_shape: 
        v: ArmholeCurve
        range: [ArmholeSquare, ArmholeAngle, ArmholeCurve]
        type: select

      length: 
        v: 30
        range: [3, 100]
        type: int
      connecting_width:
        v: 0.2  
        range: [0, 1]   # 0 = armscue_depth, 1 = as big as the shirt side
        type: float
      end_width:
        v: 0.8
        range: [0.2, 2]   # 1 = same as arm opening
        type: float
  
      sleeve_angle:  # the rest angle of a sleeve, created at connected point
        v: 30  # deg   
        range: [10, 50]
        type: int
      opening_dir_mix:
        v: 0  # deg   
        range: [-0.9, 1.4]
        type: float
    
      # Shoulder shape
      standing_shoulder: 
        v: False
        range: [True, False]
        type: bool
      standing_shoulder_len:   # can create "Standing" shoulder
        v: 7
        range: [4, 10]
        type: float

      # Ruffle
      connect_ruffle:
        v: 1
        range: [1, 2]
        type: float

      # Armhole
      smoothing_coeff:
        v: 0.25
        range: [0.1, 0.4]
        type: float
      inclination:   # How much intro the shoulder the sleeve will cut
        v: 3
        range: [2, 6]
        type: float

      # Cuff
      cuff: 
        type:
          v: CuffBandSkirt
          range: [CuffBand, CuffSkirt, CuffBandSkirt]
          type: select_null
        top_ruffle: 
          v: 1
          range: [1, 3s]
          type: float
        b_depth: 
          v: 3
          range: [1, 20]
          type: int
        skirt_length: 
          v: 10
          range: [5, 20]
          type: int
        skirt_flare:
          v: 1.5
          range: [1, 2]
          type: float  
        skirt_ruffle: 
          v: 1.3
          range: [1, 1.5]
          type: float
    
  skirt: 
    length:
      v: 30
      range: [5, 150]
      type: int
    ruffle: 
      v: 1.5
      range: [1, 2]
      type: float 
    bottom_cut: 
      v: 0
      range: [0, 0.9]  
      type: float
    flare: 
      v: 0
      range: [0, 20]
      type: int

  flare-skirt:
    length:
      v: 0.3
      range: [-0.2, 1]
      type: float 
    n_panels:
      v: 8
      range: [4, 15]
      type: int 
    suns:     # one "sun" is 360 skirt
      v: 0.7
      range: [0.1, 1.95]
      type: float 
    cut:
      add: 
        v: False
        range: [True, False]
        type: bool
      depth:
        v: 0.5    # 0 == no cut
        range: [0, 0.95]   # Fraction of skirt length
        type: float
      width: 
        v: 0.1    # 0 == no cut
        range: [0, 0.4]   
        type: float
      place: 
        v: 0.5
        range: [-1, 1]   # Fraction of the edge length
        type: float
      
  godet-skirt: 
    base: 
      v: PencilSkirt
      range: [Skirt2, PencilSkirt, SkirtWB]
      type: select
    insert_w: 
      v: 30
      range: [10, 50]  # TODO ranges don't work that well..
      type: int
    insert_depth:   # Cannot be longer then length
      v: 40
      range: [10, 50]  # TODO DEpends on the skirt length though
      type: int
    num_inserts:  # total
      v: 8     # NOTE this should be divisible by 2 (front/back panels of base)
      range: [4, 6, 8, 10, 12]   # selective options.
      type: select
    cuts_distance:
      v: 5
      range: [0, 10]  # TODO this param needs to depend on the num_inserts and skirt width
      type: int

  pencil-skirt: 
    length:
      v: 0.4
      range: [0.2, 1]
      type: float 
    rise:
      v: 0.7
      range: [0.5, 1]
      type: float
    flare:   # coefficient may depend on length
      v: 1.
      range: [0.3, 1.1]   
      type: float
    low_angle: 
      v: 0
      range: [-30, 30]
      type: int
    front_cut: # TODO Not to be used with low_angle!
      v: 0
      range: [0, 0.9]   # 1 = length
      type: float
    back_cut: 
      v: 0
      range: [0, 0.9]   # 1 = length
      type: float
    style_side_cut:
      v: null
      range: [Sun, SIGGRAPH_logo, SVGFile]
      type: select_null

    style_side_file:
      v: assets\img\logo_thick_connection.svg
      range: [assets\img\Logo_adjusted.svg, assets\img\test_shape.svg]  # NOTE: Only for sampling
      type: file_svg

  levels-skirt:
    base:    # NOTE Takes parameters from corresponding sections
      v: PencilSkirt
      range: [Skirt2, PencilSkirt, SkirtWB, SkirtCircle]
      type: select
    level:   # NOTE Takes parameters from corresponding sections
      v: Skirt2
      range: [Skirt2, SkirtCircle]
      type: select
    num_levels: 
      v: 1
      range: [1, 5]
      type: int 
    level_ruffle:   # NOTE: it will multiple the ruffle setup in the level setting, if any
      v: 1.3
      range: [1, 2]
      type: float
    
  pants: 
    length: 
      v: 0.5
      range: [0.1, 1.5]   # 0 == hip line, 1 == floor length
      type: float
    width: 
      v: 1.
      range: [1., 1.5]   # 1 = fits the hips
      type: float
    flare: 
      v: 1.
      range: [0.5, 1.2]   # 1 = same as hips
      type: float
    rise:
      v: 0.8
      range: [0.5, 1]
      type: float
    cuff: 
      type:
        v: null
        range: [CuffBand, CuffSkirt, CuffBandSkirt]
        type: select_null
      top_ruffle: 
        v: 1.5     # TODO Depend on body measurements?
        range: [1, 2]
        type: float
      b_depth: 
        v: 10
        range: [1, 20]
        type: int
      skirt_length: 
        v: 10
        range: [5, 20]
        type: int
      skirt_flare:
        v: 1.5
        range: [1, 2]
        type: float
      skirt_ruffle: 
        v: 1.3
        range: [1, 1.5]
        type: float